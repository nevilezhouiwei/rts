<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">
	
	<!-- 配置数据连接信息 -->
	<!-- 引入资源配置文件 jdbc.properties -->
	<context:property-placeholder location="classpath:jdbc.properties" />
	
	<!-- 创建数据连接池 ,使用c3p0 连接池 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="user" value="${jdbc.user}"></property>
		<property name="password" value="${jdbc.password}"></property>
		<property name="jdbcUrl" value="${jdbc.url}"></property>
		<property name="driverClass" value="${jdbc.driverClass}"></property>
	</bean>
	
	<!-- 注入 Spring 的 JdbcTemplate 框架 -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<!-- 在JdbcTemplate 初始构造器中注入连接池 -->
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	
	<!-- 开启注解扫描，查找使用注解的类 -->
	<context:component-scan base-package="com.nevile.rts.spring"></context:component-scan>
	<!-- 开启代理 设置true 使用cgblib 方式代理，false 使用jdk 代理。 --> 
	<!-- 只有实现了接口的类，才能被 jdk 代理 -->
	<aop:aspectj-autoproxy proxy-target-class="true" ></aop:aspectj-autoproxy>

	<!-- 数据源的事务管理器 -->
	<bean id='transactionManager' class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	<!-- 启用事务注解 ，事务注解起作用-->
	<tx:annotation-driven transaction-manager="transactionManager"/>

</beans>
